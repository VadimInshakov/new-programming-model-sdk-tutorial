---
name: first-network-org1
version: 1.0.0
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: Org1

  logging:
    level: info
    # Global configuration for peer, event service and orderer timeouts
    # if this this section is omitted, then default values will be used (same values as below)
    peer:
      timeout:
        connection: 600s
        response: 600s
    #      discovery:
    #        # Expiry period for discovery service greylist filter
    #        # The channel client will greylist peers that are found to be offline
    #        # to prevent re-selecting them in subsequent retries.
    #        # This interval will define how long a peer is greylisted
    #        greylistExpiry: 10s
    #  eventService:
    #    # Event service type (optional). If not specified then the type is automatically
    #    # determined from channel capabilities.
    #    type: (deliver|eventhub)
    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    #    # the values as they see fit in their config file
    #      timeout:
    #        connection: 15s
    #        registrationResponse: 15s
    orderer:
      timeout:
        connection: 600s
        response: 600s
    global:
      timeout:
        query: 600s
        execute: 600s
        resmgmt: 600s
  #    cache:
  #      connectionIdle: 30s
  #      eventServiceIdle: 2m
  #      channelConfig: 30m
  #      channelMembership: 30s
  #      discovery: 10s
  #      selection: 10m

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ${HOME}/tests/fabric-samples/first-network/crypto-config/

channels:
  # name of the channel
  mychannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("rzd" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    # deprecated: not recommended, to override any orderer configuration items, entity matchers should be used.
    # orderers:
    #  - orderer.example.com

    # Required. list of peers from participating orgs
    peers:
      peer0.org1.example.com:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true


    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0


organizations:
  Org1:
    mspid: Org1MSP
    cryptoPath: peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    peers:
      - peer0.org1.example.com
      - peer1.org1.example.com
    certificateAuthorities:
      - ca.org1.example.com
peers:
  peer0.org1.example.com:
    url: grpcs://localhost:7051
    tlsCACerts:
      path: ${HOME}/tests/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      hostnameOverride: peer0.org1.example.com
  peer1.org1.example.com:
    url: grpcs://localhost:8051
    tlsCACerts:
      path: ${HOME}/tests/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem

    grpcOptions:
      ssl-target-name-override: peer1.org1.example.com
      hostnameOverride: peer1.org1.example.com
certificateAuthorities:
  ca.org1.example.com:
    url: https://localhost:7054
    caName: ca-org1
    tlsCACerts:
      path: ${HOME}/tests/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/cacerts/ca.org1.example.com-cert.pem

    httpOptions:
      verify: false

ca.org1.example.com:
  url: https://ca.org1.example.com:7054
  # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
  # needed to enroll and invoke new users.
  httpOptions:
    verify: false
  registrar:
    enrollId: admin
    enrollSecret: adminpw
  # [Optional] The optional name of the CA.
  caName: ca.org1.example.com
  tlsCACerts:
    # Certificate location absolute path
    path: ${HOME}/tests/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
